Новые возможности

Пакет basic

1. Написан и отлажен новый класс, реализующий интерфейс SyntaxTreeInterface - класс OrdinalSyntaxTree на базе структуры TreeMap. Функциональность его полностью
идентична таковой у AndOrTree. На основании тестов можно считать, что классы являются полностью взаимозаменяемыми.
2. Написан и отлажен класс ArgParser, реализующий разбор аргументов командной строки. Класс будет полезен в методе public static void main(String[] args). Класс
поддерживает позиционные и ключевые параметры командной строки, контроль обязательных и опциональных параметров, выдачу на консоль краткой справки по аргументам 
командной строки. Класс поддерживает булевы, целые, вещественные, строковые параметры, параметры-нумерации и URI. 

Пакет basic.growablearrays

1. Написан и отлажен класс InOutGrowableCharArray, являющийся дочерним классом GrowableCharArray, и поддерживающий работу с массивом как с приемником потокового вывода
(аналогично System.out) 

Пакет model

Вновь введенный пакет, обеспечивающий работы библиотеки с моделями. Модели предавляют собой иерархические описания различных сущностей (классов, полей классов, средств
навигации и проч). Модели могут быть построены на базе различных источников (xml-описания, аннотированные классы, схема базы данных и т.д.), а также образованы путем 
соединения нескольких моделей в одну. На основании модели классы библиотеки могут автоматически строить экранные и печатные формы, средства логического контроля данных,
поддерживать механизм ORM и проч. Модели, по мысли автора, являются долговременным решением и дальнейшая разработка библиотеки и проектов с ее использованием будет 
целиком базироваться на концепции модели.
Пакет содержит следующие классы:
- класс ContentModelFactory, обеспечивающиф построение модели по различным источникам
- классы, реализующие интерфейсы ContentDescriptionInterface и ContentMetadataInterface (пакет model.interfaces)

Пакет nanoservice 

Данный пакет в версии 0.0.2 имел статус "в разработке", и, соответственно, все закрытые классы. В версии 0.0.3 пакет открыт и его классы доступны к использованию.
Пакет представляет собой нано-WEB-сервер (на базе sun.com.net.http.HttpServer), доступный изнутри Java-приложений. Он поддерживает как статический контент (с использованием 
возможностей пакета fsys), так и легковесный аналог Rest-сервисов. Его очень удобно использовать в качестве встроенного сервера помощи по работе с программой (через WEB-браузер),
но он также вполне может быть использован и как полноценный WEB-сервер. В сервере имеется аналог процедуры деплоймента, что позволяет выполнять "горячую" замену отдельных сервисов.
Через этот же сервер Java-приложение может обеспечивать WEB-интерфейс к своим возможностям.
Основной класс сервера - NanoServiceFactory.  

Пакет ui.swing.terminal

Данный пакет в версии 0.0.2 имел статус "в разработке", и, соответственно, все закрытые классы. В версии 0.0.3 пакет открыт и его классы доступны к использованию. 
Классы пакета эмулируют "зеленый терминал", позволяя с их помощью писать "алфавитно-цифровые" приложения. Несмотря на "древний" вид такого приложения, пользоваться 
этими классами удобно с точки зрения программирования, поскольку сразу же отпадают все вопросы, связанные с размещением и управлением графическими компонентами.
Пакет содержит три класса:
- класс "физической" консоли PseudoConsole (фактически - массив символов и их атрибутов - цвета фона и переднего плана)
- класс терминала Term, позволяющий работать с консолью как с устройством вывода (функциональность, аналогичная System.out), а также обрабатывать популярные 
  ESC-последовательности ANSI-терминалов
- класс TermUtils, поддерживающий ряд полезных операций с консолью (рисование псевдографических линий, областей, сохранение и восстановление частей экрана и т.д.)

Указанный набор классов протестирован на проекте fsyscommander, создание которого частично мотивировалось именно этой целью.

Пакет ui.swing.useful
  
Вновь введенный пакет. В него включены классы полезной функциональности, предназначенные для применения в Swing-приложениях. В их состав входит:
   

Доработки существующей функциональности

Пакет basic

1. Класс Utils расширен рядом методов, поддерживающих специфичную обработку URI (дополнение path, извлечение вложенных URI и т.д.)

Пакет basic.exceptions

1. Произведена ревизия исключений, введена новая иерархия исключений.

Пaкет Enumerations

1. Управляющие нумерации, часто используемые в различных методах обхода, вынесены из многих мест в данный пакет. Классы, ранее их использовавшие, переписаны с учетом
данной доработки  

Пакет streams.char2byte.asm

1. В ассемблер байт-кода добавлены новые псевдокоманды:
.lines и .source - ручная нумерация строк и указание источника кода (используется при написании трансляторов)
.version - версия сгенерированного байт-кода (поддерживаются версии 1.7 и 1.8)
.options - дополнительные возможности

2. В ассемблер байт-кода добавлена автоматизация *load. В ней можно употреюлять практически полноценные выражения языка Java, которые будут автоматически перекомпилированы в 
последовательности команд байт-кода.


Устаревшие и исключенные компоненты

Исправление ошиок     