Release 0.0.4 notes

General notes

The most important difference for the release 0.0.4 is a migration to Java 9 functionality. All the Pure Library project was incapsulated into Java 9 module (named chav1961.purelib).
As a result, many classes of the Pure Library were moved to packages, different to previous release and/or change it's content and implementation.

I. New features

1. Byte code assembler supports a set of new directives now:
	- .line - insert LineNumberTable into generating Java class
	- .version - support versions of the Java class file format (1.7 and 1.8 are available now)
	- .varTable - insert LocalVarTable attribute into generating Java class
	- .source - insert source attribute into generating Java class
	
2. Byte code assembler supports generation of <clinit> method and ConstValue attributes for static final fields now. This support implements as 'static' constructor and '= value' assignment for
static final fields in the class description	

3. New package chav1961.purelib.testing was created. It contains a set of classes and interfaces to use in JUnit and integrated tests:
	- a set of marker interfaces for JUnit test categories
	- SwingUnitTest class - a wrapper for java.awt.Robot class to use in Swing UI tests
	- TestingUtils class to get debugging trace file, test database connection to use for integrated test purposes etc

4. chav1961.purelib.model.ModelUtils class extends with set of methods:
    - serializeFromJson/deserializeFromJson - to save/load model descriptors into/from json format
    - buildMappedClassByModel - to build on-the-fly class instance with inner public fields and java.util.Map-styled access to them
    - buildMappedWrapperClassByModel - to build on-the-fly implementation of java.util.Map to get java.util.Map-styled access to all fields of wrapped instance

II. Refactoring

1. All special URLs implementation in the Pure library were successfully migrated to Java 9 SPI support. The new package chav1961.purelib.net and it's sub-packages were created to keep new 
code was refactored.     

2. To prevent some kind of errors on assembler byte code generation, strong data type and stack manipulation check was implemented in it.

3. Performance of the byte code assembler and macro assembler were increased

4. Maven scripts and all tests were radically refactored to support correct UI Swing testing (JUnit test 'categories' were placed)

5. Method setAutomaticClearTime(...) was added to JStateString for automatical clearing of state string with different message severities 

III. Incompatibilities

1. Class basic.ClassLoaderWrapper was removed from Pure Library, because it's functionality can't be supported in Java 9 and higher. 
2. Class ui.swing.AnnotatedActionListener was removed, because it's functionality is duplicated with SwingUtils.buildAnnotatedListener(...) methods
3. Class ui.swing.SwingModelUtils was removed and it's functionality was migrated to SwingUtils

IV. Bug fix

1. Macro assembler .choise with booleans - fixed
2. AndOrTree last character in node name had been lost on walking - fixed. 
3. SubstitutableProperties didnt't get values from default source after it's changing - fixed. 
4. Problems with 'root' URL path normalization - fixed.
