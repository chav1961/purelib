Работы по Pure Library 0.0.3

Пакет basic
*1. Написать реализацию SyntaxTreeInterface с использованием стандартного класса TreeMap
*2. Написать реализацию ArgParser для разбора параметров командной строки при запуске приложения
3. Написать реализацию XmlBasedParser для построения парсеров "болтливых" языков типа SQL.
4. Удалить изи библиотеки AssemblerTemplateRepo и исключить все ссылки на него
Пакет basic.growablrearrays
1. Написать InOutGrowableCharArray
Пакет exceptions
*1. Упорядочить применение исключений из пакета exceptions
Пакет fsys
1. Дополнить интерфейс FileSystemInterface методом isMound и итератором по всем подмонтированным файловым системам. Разнести реализацию на существующие файловые системы
1. Дополнить интерфейс FileSystemInterface методом join/unjoin/isJoined и итератором по всем слитым файловым системам. Разнести реализацию на существующие файловые системы
Пакет json
1. Выполнить рефакторинг JsonSerializer для получения максимальной производительности
2. Дополнить JsonSerializer возможностью работы с Beans (с использованием getter/setter)
Пакет model
1. Перевести все классы библиотеки на работу с моделями
Пакет sql
1. Отладить все ранее написанные классы
Пакет sql.content
1. Отладить работу с файлом формата *.csv
2. Отладить реализацию ResultSetFactory для построения отладочной выборки из различных источников данных
3. Написать реализацию JsonContentParser для работы с файлами формата JSON
4. Написать реализацию DBFContentParser для работы с файлами формата DBF
Пакет sql.fsys
1. Отладить все ранее написанные классы
Пакет streams.char2byte.asm
1. Дополнить ассемблер псевдокомандами .version, .line и .source
2. Поддержать генерацию кода для версии Java 1.8
3. Поддержать команду invokedynamic
4. Поддержать автоматизацию *load* (поля, индексы, арифметика в полном объеме)
5. Поддержать индексы в параметрах и локальных переменных макросов
6. Поддержать переменное число аргументов в макросах
7. Поддержать пропуск позиционных параметров в макросах
8. Отладить работу .stack
Пакет ui
1. Отладить все ранее написанные классы.
2. Дописать построение моделей по метаинформации из БД, классу, XML-описанию
Пакет nanoservice
1. Отладить все ранее написанные классы.
Пакет ui.swing
1. Разработать реализацию всех элементов модели из пакета ui
2. Написать и отладить класс SwingModelUtils для генерации органов управления по элементам модели
Пакет ui.swing.terminal
1. Переделать класс Term на работу с одномерными массивами
2. Написать JUnit-тесты к классу Term
3. Переделать класс PseudoConsole для использования возможностей PureLib 
4. Отладить класс PseudoConsole
5. Написать JUnit-тесты к классу PseudoConsole
Пакет ui.useful
1. Перенести в пакет "кирпичики" по Swing.
2. Написать и отладить класс JFileSelectionDialog
3. Написать и отладить класс JFileContentManipulator
*4. Перенести MercHighLighter в пакет и обобщить его код
5. Перенести JUnit-тесты по MercHighLighter в пакет 
6. Написать и отладить класс JCreoleEditor с подсветкой синтаксиса
Пакет ui.web
1. Разработать реализацию всех элементов модели из пакета ui
2. Написать и отладить класс WebModelUtils для генерации органов управления по элементам модели

Работы по Funny Prolog 0.0.2

1. Рефакторинг проекта под применение новых возможностей Pure Library
2. Разработка SPI-интерфейса для использования его в программах на Java

Работы по Pure Library Navigator 0.0.1

1. Рефакторинг проекта под применение новых возможностей Pure Library
2. Рефакторинг базы знаний о Pure Library
3. Разработка аналога JavaDoc с возможностью локализации

Работы по FSysCommander 0.0.1

1. Рефакторинг проекта под применение новых возможностей Pure Library
2. Разработка функциональности

Работы по Merc 0.0.1

1. Разработка компилятора MerLan
2. JUnit-тесты для компилятора
3. Разработка отладчика MerLan
4. JUnit-тесты для отладчика
5. Статический контент для справки (описание MerLan, описание world) 