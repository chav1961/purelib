Работы по Pure Library 0.0.4

Пакет basic
1. Написать реализацию XmlBasedParser для построения парсеров "болтливых" языков типа SQL.
2. Дописать javadoc 
3. Дополнить класс Utils универсальным методом обхода деревьев и растащить его на остальные классы библиотеки
4. Написать класс XMLUtils и перенести в него полезный код из других классов
5. Написать и отладить метод extract в классе CharUtils
6. Дописать тесты для классов XMLUtils, CSSUtils, URIUtils
Пакет basic.growablrearrays
1. Сделать все массивы реализующими маркерный интерфейс и организвать общую процедуру их обхода
Пакет basic.subscribable
1. Написать тесты на все классы пакета
Пакет concurrent
1. Написать тесты на LightWeightListenerList
2. Написать тесты на ThreadPoolTaskWrapper
Пакет exceptions
Пакет fsys
1. Отладить работу FileSystemInMemory
Пакет i18n
1. Дописать javadoc 
2. Переделать реализацию монтирования локализаторов
3. Заменить PropertyLocalizer на XMLLocalizer внутри библиотеки
Пакет javadoc
1. Довести до ума DocLet
Пакет json
1. Выполнить рефакторинг JsonSerializer для получения максимальной производительности
2. Дополнить JsonSerializer возможностью работы с Beans (с использованием getter/setter)
3. Дописать javadoc 
Пакет model
1. Написать и отладить класс ContentMetadataFilter
2. Написать и отладить построение ORM-провайдера
3. Дописать и отладить в ModelUtils методы чтения-записи полей по URI
4. Дописать javadoc 
Пакет sql
1. Отладить все ранее написанные классы
2. Написать тесты к SQLUtils
3. Дописать javadoc 
Пакет sql.content
1. Дописать покрытие тестами на все классы пакета
2. Дописать javadoc 
Пакет streams
1. Переделать JsonSaxHandlerFactory под новые возможности ассемблера и класса GettersAndSetters 
2. Добавить опцию для BigInteger/BigDecimal
3. Дополнить JsonStaxParser методом nested()->Iterable<LexType> для обработки вложенностей
4. Написать классы CsvStaxParser и CsvStaxPrinter 
5. Дописать javadoc 
Пакет streams.byte2char
1. Дописать javadoc 
Пакет streams.char2char
1. Дописать javadoc 
Пакет streams.char2byte.asm
1. Дополнить ассемблер псевдокомандами .version, .line, .options и .source
2. Поддержать генерацию кода для версии Java 1.8
3. Поддержать команду invokedynamic
4. Поддержать автоматизацию *load* (поля, индексы, арифметика в полном объеме)
5. Поддержать индексы в параметрах и локальных переменных макросов
6. Поддержать переменное число аргументов в макросах
7. Отладить работу .stack
Пакет ui
1. Отладить все ранее написанные классы.
2. Дописать javadoc 
Пакет nanoservice
1. Дописать javadoc 
Пакет ui.swing
1. Разработать реализацию всех элементов модели из пакета ui
2. Написать и отладить класс SwingModelUtils для генерации органов управления по элементам модели
3. Написать метод SwingUtils.showCreoleMicroHelp
4. Дописать javadoc 
5. Дописать и отладить метод SwingUtils.buildGeneralPath
6. Дописать и отладить метод SwingUtils.parseCSS 
Пакет ui.swing.terminal
1. Дописать javadoc 
Пакет ui.swing.useful
1. Перенести в пакет "кирпичики" по Swing.
2. Перенести JUnit-тесты по MercHighLighter в пакет 
3. Написать и отладить класс JFileNameTextField с возможностью выбора файла и валидацией введенного имени
4. Перенести логику создания экранной формы по модели из AutoBuildForm в новый класс JLabelledPanel
5. Добавить в этот класс фильтр для отсева полей, которые включать не нужно
6. Проверить работу кнопок удаления элемента и создания директории в JFileSelectionDialog.
7. Написать класс SwingDebugger для эмуляции Swing при отладке визуальных компонент
8. Дописать и отладить JDialogContainer и перевести на него другие классы с содержимым
9. Написать и отладить JORMProvidedTableModel 
10. Дописать javadoc
